class Solution{
    public int lengthOfLIS(int[] nums){
        int n = nums.length;
        int dp[][] = new int[n][n+1];
        for(int[] temp : dp){
            Arrays.fill(temp,-1);
        }
        return func(0, -1, nums, n, dp);
    }
    private int func(int ind, int prev_ind, int arr[], int n, int[][] dp){

        if(ind == n) return 0;
        if(dp[ind][prev_ind+1]!=-1) return dp[ind][prev_ind+1];
        int len = 0+func(ind+1, prev_ind, arr, n, dp);
        if(prev_ind == -1 || arr[ind]>arr[prev_ind]){
            len = Math.max(len, 1+func(ind+1, ind, arr, n, dp));
        }
        return dp[ind][prev_ind+1] = len;
    }
}
/* 
T.C : O(N*N)
S.C : O(N*N)
*/